{
    "appid": "290b7499-0374-4930-9cdc-5e9b05d65827",
    "name": "HTTP",
    "description": "This App facilitates making HTTP requests as actions",
    "package_name": "phantom_http",
    "publisher": "Splunk",
    "type": "information",
    "main_module": "http_connector.py",
    "app_version": "3.2.1",
    "utctime_updated": "2021-10-18T05:03:25.000000Z",
    "product_vendor": "Generic",
    "product_name": "HTTP",
    "product_version_regex": ".*",
    "min_phantom_version": "4.10.0.40961",
    "license": "Copyright (c) 2016-2021 Splunk Inc.",
    "logo": "logo_splunk.svg",
    "logo_dark": "logo_splunk_dark.svg",
    "python_version": "3",
    "latest_tested_versions": [
        "Tested with Splunk Trustar on 12th Oct 2021"
    ],
    "configuration": {
        "base_url": {
            "data_type": "string",
            "order": 0,
            "description": "Base URL for making queries. (e.g. https://myservice/)",
            "required": true
        },
        "test_path": {
            "data_type": "string",
            "order": 1,
            "description": "Base URL endpoint for test connectivity. (e.g. /some/specific/endpoint)"
        },
        "auth_token_name": {
            "data_type": "string",
            "order": 2,
            "description": "Type of authentication token",
            "default": "ph-auth-token"
        },
        "auth_token": {
            "data_type": "password",
            "order": 3,
            "description": "Value of authentication token"
        },
        "username": {
            "data_type": "string",
            "order": 4,
            "description": "Username (for HTTP basic auth)"
        },
        "password": {
            "data_type": "password",
            "order": 5,
            "description": "Password (for HTTP basic auth)"
        },
        "oauth_token_url": {
            "data_type": "string",
            "order": 6,
            "description": "URL to fetch oauth token from"
        },
        "placeholder": {
            "data_type": "ph",
            "order": 7,
            "description": ""
        },
        "client_id": {
            "data_type": "string",
            "order": 8,
            "description": "Client ID (for OAuth)"
        },
        "client_secret": {
            "data_type": "password",
            "order": 9,
            "description": "Client Secret (for OAuth)"
        },
        "timeout": {
            "data_type": "numeric",
            "order": 10,
            "description": "Timeout for HTTP calls"
        }
    },
    "actions": [
        {
            "action": "test connectivity",
            "identifier": "test_connectivity",
            "description": "Validate connection using the configured credentials",
            "verbose": "This action will perform a GET on the configured <b>base_url</b>. The action will succeed if given a status code between 200 and 399 (inclusive). Therefore, if the given base URL requires no authentication, this action may pass even if the supplied credentials are incorrect. Alternately, if the given base URL does not point to a valid endpoint, this action could fail even if other actions may succeed with valid <b>location</b> parameters.",
            "type": "test",
            "read_only": true,
            "parameters": {},
            "output": [],
            "versions": "EQ(*)"
        },
        {
            "action": "put data",
            "description": "Perform a REST PUT call to the server",
            "type": "generic",
            "identifier": "http_put",
            "read_only": false,
            "parameters": {
                "location": {
                    "description": "Location (e.g. path/to/endpoint?query=string)",
                    "data_type": "string",
                    "order": 0,
                    "primary": true,
                    "contains": [
                        "endpoint"
                    ],
                    "required": true
                },
                "body": {
                    "description": "PATCH body (query string, JSON, etc.)",
                    "data_type": "string",
                    "order": 1,
                    "required": true
                },
                "verify_certificate": {
                    "description": "Verify certificates (if using HTTPS)",
                    "data_type": "boolean",
                    "order": 2
                },
                "headers": {
                    "description": "Additional headers (JSON object with headers)",
                    "data_type": "string",
                    "order": 3
                }
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.parameter.body",
                    "data_type": "string",
                    "example_values": [
                        "{\"name\": \"Bad IP\"}"
                    ]
                },
                {
                    "data_path": "action_result.parameter.headers",
                    "data_type": "string",
                    "example_values": [
                        "{\"Content-Type\": \"application/json\"}"
                    ]
                },
                {
                    "data_path": "action_result.parameter.location",
                    "data_type": "string",
                    "contains": [
                        "endpoint"
                    ],
                    "example_values": [
                        "/rest/assets"
                    ]
                },
                {
                    "data_path": "action_result.parameter.verify_certificate",
                    "data_type": "boolean",
                    "example_values": [
                        false
                    ]
                },
                {
                    "data_path": "action_result.data.*.location",
                    "data_type": "string",
                    "contains": [
                        "url"
                    ],
                    "example_values": [
                        "http://192.168.1.26/rest/assets"
                    ]
                },
                {
                    "data_path": "action_result.data.*.method",
                    "data_type": "string",
                    "example_values": [
                        "PUT"
                    ]
                },
                {
                    "data_path": "action_result.data.*.parsed_response_body",
                    "data_type": "string",
                    "example_values": [
                        "{\"failed\": true, \"message\": \"Requested item not found\"}"
                    ]
                },
                {
                    "data_path": "action_result.data.*.response_body",
                    "data_type": "string",
                    "example_values": [
                        "{\"failed\": true, \"message\": \"Requested item not found\"}"
                    ]
                },
                {
                    "data_path": "action_result.data.*.response_headers",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary.reason",
                    "data_type": "string",
                    "example_values": [
                        "Not Found"
                    ]
                },
                {
                    "data_path": "action_result.summary.status_code",
                    "data_type": "numeric",
                    "example_values": [
                        404
                    ]
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string",
                    "example_values": [
                        "Can't process response from server. Status Code: 404 Data from server: {\"failed\": true, \"message\": \"Requested item not found\"}"
                    ]
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric",
                    "example_values": [
                        0
                    ]
                }
            ],
            "render": {
                "type": "json"
            },
            "versions": "EQ(*)"
        },
        {
            "action": "patch data",
            "description": "Perform a REST PATCH call to the server",
            "type": "generic",
            "identifier": "http_patch",
            "read_only": false,
            "parameters": {
                "location": {
                    "description": "Location (e.g. path/to/endpoint?query=string)",
                    "data_type": "string",
                    "order": 0,
                    "primary": true,
                    "contains": [
                        "endpoint"
                    ],
                    "required": true
                },
                "body": {
                    "description": "PATCH body (query string, JSON, etc.)",
                    "data_type": "string",
                    "order": 1
                },
                "verify_certificate": {
                    "description": "Verify certificates (if using HTTPS)",
                    "data_type": "boolean",
                    "order": 2,
                    "required": true
                },
                "headers": {
                    "description": "Additional headers (JSON object with headers)",
                    "data_type": "string",
                    "order": 3
                }
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.parameter.body",
                    "data_type": "string",
                    "example_values": [
                        "{\"name\": \"Bad IP\"}"
                    ]
                },
                {
                    "data_path": "action_result.parameter.headers",
                    "data_type": "string",
                    "example_values": [
                        "{\"Content-Type\": \"application/json\"}"
                    ]
                },
                {
                    "data_path": "action_result.parameter.location",
                    "data_type": "string",
                    "contains": [
                        "endpoint"
                    ],
                    "example_values": [
                        "/rest/assets"
                    ]
                },
                {
                    "data_path": "action_result.parameter.verify_certificate",
                    "data_type": "boolean",
                    "example_values": [
                        false
                    ]
                },
                {
                    "data_path": "action_result.data.*.location",
                    "data_type": "string",
                    "contains": [
                        "url"
                    ],
                    "example_values": [
                        "http://192.168.1.26/rest/assets"
                    ]
                },
                {
                    "data_path": "action_result.data.*.method",
                    "data_type": "string",
                    "example_values": [
                        "PATCH"
                    ]
                },
                {
                    "data_path": "action_result.data.*.parsed_response_body",
                    "data_type": "string",
                    "example_values": [
                        "{\"failed\": true, \"message\": \"Requested item not found\"}"
                    ]
                },
                {
                    "data_path": "action_result.data.*.response_body",
                    "data_type": "string",
                    "example_values": [
                        "{\"failed\": true, \"message\": \"Requested item not found\"}"
                    ]
                },
                {
                    "data_path": "action_result.data.*.response_headers",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary.reason",
                    "data_type": "string",
                    "example_values": [
                        "Not Found"
                    ]
                },
                {
                    "data_path": "action_result.summary.status_code",
                    "data_type": "numeric",
                    "example_values": [
                        404
                    ]
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string",
                    "example_values": [
                        "Can't process response from server. Status Code: 404 Data from server: {\"failed\": true, \"message\": \"Requested item not found\"}"
                    ]
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric",
                    "example_values": [
                        0
                    ]
                }
            ],
            "render": {
                "type": "json"
            },
            "versions": "EQ(*)"
        },
        {
            "action": "delete data",
            "description": "Perform a REST DELETE call to the server",
            "type": "generic",
            "identifier": "http_delete",
            "read_only": false,
            "parameters": {
                "location": {
                    "description": "Location (e.g. path/to/endpoint?query=string)",
                    "data_type": "string",
                    "order": 0,
                    "primary": true,
                    "contains": [
                        "endpoint"
                    ],
                    "required": true
                },
                "body": {
                    "description": "DELETE body (query string, JSON, etc.)",
                    "data_type": "string",
                    "order": 1
                },
                "verify_certificate": {
                    "description": "Verify certificates (if using HTTPS)",
                    "data_type": "boolean",
                    "order": 2,
                    "required": true
                },
                "headers": {
                    "description": "Additional headers (JSON object with headers)",
                    "data_type": "string",
                    "order": 3
                }
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.parameter.body",
                    "data_type": "string",
                    "example_values": [
                        "{\"name\": \"Bad IP\"}"
                    ]
                },
                {
                    "data_path": "action_result.parameter.headers",
                    "data_type": "string",
                    "example_values": [
                        "{\"Content-Type\": \"application/json\"}"
                    ]
                },
                {
                    "data_path": "action_result.parameter.location",
                    "data_type": "string",
                    "contains": [
                        "endpoint"
                    ],
                    "example_values": [
                        "/rest/assets"
                    ]
                },
                {
                    "data_path": "action_result.parameter.verify_certificate",
                    "data_type": "boolean",
                    "example_values": [
                        false
                    ]
                },
                {
                    "data_path": "action_result.data.*.location",
                    "data_type": "string",
                    "contains": [
                        "url"
                    ],
                    "example_values": [
                        "http://192.168.1.26/rest/assets"
                    ]
                },
                {
                    "data_path": "action_result.data.*.method",
                    "data_type": "string",
                    "example_values": [
                        "DELETE"
                    ]
                },
                {
                    "data_path": "action_result.data.*.parsed_response_body",
                    "data_type": "string",
                    "example_values": [
                        "{\"failed\": true, \"message\": \"Requested item not found\"}"
                    ]
                },
                {
                    "data_path": "action_result.data.*.response_body",
                    "data_type": "string",
                    "example_values": [
                        "{\"failed\": true, \"message\": \"Requested item not found\"}"
                    ]
                },
                {
                    "data_path": "action_result.data.*.response_headers",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary.reason",
                    "data_type": "string",
                    "example_values": [
                        "Not Found"
                    ]
                },
                {
                    "data_path": "action_result.summary.status_code",
                    "data_type": "numeric",
                    "example_values": [
                        404
                    ]
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string",
                    "example_values": [
                        "Can't process response from server. Status Code: 404 Data from server: {\"failed\": true, \"message\": \"Requested item not found\"}"
                    ]
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric",
                    "example_values": [
                        0
                    ]
                }
            ],
            "render": {
                "type": "json"
            },
            "versions": "EQ(*)"
        },
        {
            "action": "get headers",
            "description": "Perform a REST HEAD call to the server",
            "type": "investigate",
            "identifier": "http_head",
            "read_only": true,
            "parameters": {
                "location": {
                    "description": "Location (e.g. path/to/endpoint?query=string)",
                    "data_type": "string",
                    "order": 0,
                    "primary": true,
                    "contains": [
                        "endpoint"
                    ],
                    "required": true
                },
                "verify_certificate": {
                    "description": "Verify certificates (if using HTTPS)",
                    "data_type": "boolean",
                    "order": 1,
                    "required": true
                },
                "headers": {
                    "description": "Additional headers (JSON object with headers)",
                    "data_type": "string",
                    "order": 2
                }
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.parameter.headers",
                    "data_type": "string",
                    "example_values": [
                        "{\"User-Agent\": \"automation\"}"
                    ]
                },
                {
                    "data_path": "action_result.parameter.location",
                    "data_type": "string",
                    "contains": [
                        "endpoint"
                    ],
                    "example_values": [
                        "/rest/cont"
                    ]
                },
                {
                    "data_path": "action_result.parameter.verify_certificate",
                    "data_type": "boolean",
                    "example_values": [
                        false
                    ]
                },
                {
                    "data_path": "action_result.data.*.location",
                    "data_type": "string",
                    "contains": [
                        "url"
                    ],
                    "example_values": [
                        "http://192.168.1.26/rest/cont"
                    ]
                },
                {
                    "data_path": "action_result.data.*.method",
                    "data_type": "string",
                    "example_values": [
                        "HEAD"
                    ]
                },
                {
                    "data_path": "action_result.data.*.response_headers",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary.reason",
                    "data_type": "string",
                    "example_values": [
                        "OK"
                    ]
                },
                {
                    "data_path": "action_result.summary.status_code",
                    "data_type": "numeric",
                    "example_values": [
                        200
                    ]
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string",
                    "example_values": [
                        "Status code: 200, Reason: OK"
                    ]
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                }
            ],
            "render": {
                "type": "json"
            },
            "versions": "EQ(*)"
        },
        {
            "action": "get options",
            "description": "Perform a REST OPTIONS call to the server",
            "type": "investigate",
            "identifier": "http_options",
            "read_only": true,
            "parameters": {
                "location": {
                    "description": "Location (e.g. path/to/endpoint?query=string)",
                    "data_type": "string",
                    "order": 0,
                    "primary": true,
                    "contains": [
                        "endpoint"
                    ],
                    "required": true
                },
                "verify_certificate": {
                    "description": "Verify certificates (if using HTTPS)",
                    "data_type": "boolean",
                    "order": 1,
                    "required": true
                },
                "headers": {
                    "description": "Additional headers (JSON object with headers)",
                    "data_type": "string",
                    "order": 2
                }
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.parameter.headers",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.location",
                    "data_type": "string",
                    "contains": [
                        "endpoint"
                    ],
                    "example_values": [
                        "/rest/cont"
                    ]
                },
                {
                    "data_path": "action_result.parameter.verify_certificate",
                    "data_type": "boolean",
                    "example_values": [
                        false
                    ]
                },
                {
                    "data_path": "action_result.data.*.location",
                    "data_type": "string",
                    "contains": [
                        "url"
                    ],
                    "example_values": [
                        "http://192.168.1.26/rest/cont"
                    ]
                },
                {
                    "data_path": "action_result.data.*.method",
                    "data_type": "string",
                    "example_values": [
                        "OPTIONS"
                    ]
                },
                {
                    "data_path": "action_result.data.*.parsed_response_body",
                    "data_type": "string",
                    "example_values": [
                        "GET,HEAD,PUT,POST,DELETE,PATCH"
                    ]
                },
                {
                    "data_path": "action_result.data.*.response_body",
                    "data_type": "string",
                    "example_values": [
                        "GET,HEAD,PUT,POST,DELETE,PATCH"
                    ]
                },
                {
                    "data_path": "action_result.data.*.response_headers",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary.reason",
                    "data_type": "string",
                    "example_values": [
                        "OK"
                    ]
                },
                {
                    "data_path": "action_result.summary.status_code",
                    "data_type": "numeric",
                    "example_values": [
                        200
                    ]
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string",
                    "example_values": [
                        "Status code: 200, Reason: OK"
                    ]
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                }
            ],
            "render": {
                "type": "json"
            },
            "versions": "EQ(*)"
        },
        {
            "action": "get data",
            "description": "Perform a REST GET call to the server",
            "type": "investigate",
            "identifier": "http_get",
            "read_only": true,
            "parameters": {
                "location": {
                    "description": "Location (e.g. path/to/endpoint?query=string)",
                    "data_type": "string",
                    "order": 0,
                    "primary": true,
                    "contains": [
                        "endpoint"
                    ],
                    "required": true
                },
                "verify_certificate": {
                    "description": "Verify certificates (if using HTTPS)",
                    "data_type": "boolean",
                    "order": 1,
                    "required": true
                },
                "headers": {
                    "description": "Additional headers (JSON object with headers)",
                    "data_type": "string",
                    "order": 2
                }
            },
            "render": {
                "type": "json",
                "width": 10,
                "height": 5,
                "title": "GET DATA"
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.parameter.headers",
                    "data_type": "string",
                    "example_values": [
                        "{\"Content-Type\": \"application/json\"}"
                    ]
                },
                {
                    "data_path": "action_result.parameter.location",
                    "data_type": "string",
                    "contains": [
                        "endpoint"
                    ],
                    "example_values": [
                        "/rest/cont"
                    ]
                },
                {
                    "data_path": "action_result.parameter.verify_certificate",
                    "data_type": "boolean",
                    "example_values": [
                        false
                    ]
                },
                {
                    "data_path": "action_result.data.*.location",
                    "data_type": "string",
                    "contains": [
                        "url"
                    ],
                    "example_values": [
                        "http://192.168.1.26/rest/cont"
                    ]
                },
                {
                    "data_path": "action_result.data.*.method",
                    "data_type": "string",
                    "example_values": [
                        "GET"
                    ]
                },
                {
                    "data_path": "action_result.data.*.parsed_response_body",
                    "data_type": "string",
                    "example_values": [
                        "{\"failed\": true, \"message\": \"Requested item not found\"}"
                    ]
                },
                {
                    "data_path": "action_result.data.*.response_body",
                    "data_type": "string",
                    "example_values": [
                        "{\"failed\": true, \"message\": \"Requested item not found\"}"
                    ]
                },
                {
                    "data_path": "action_result.data.*.response_headers",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary.reason",
                    "data_type": "string",
                    "example_values": [
                        "Not Found"
                    ]
                },
                {
                    "data_path": "action_result.summary.status_code",
                    "data_type": "numeric",
                    "example_values": [
                        404
                    ]
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string",
                    "example_values": [
                        "Can't process response from server. Status Code: 404 Data from server: {\"failed\": true, \"message\": \"Requested item not found\"}"
                    ]
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric",
                    "example_values": [
                        0
                    ]
                }
            ],
            "versions": "EQ(*)"
        },
        {
            "action": "post data",
            "description": "Perform a REST POST call to the server",
            "type": "generic",
            "identifier": "http_post",
            "read_only": false,
            "parameters": {
                "location": {
                    "description": "Location (e.g. path/to/endpoint)",
                    "data_type": "string",
                    "order": 0,
                    "primary": true,
                    "contains": [
                        "endpoint"
                    ],
                    "required": true
                },
                "body": {
                    "description": "POST body (query string, JSON, etc.)",
                    "data_type": "string",
                    "order": 1,
                    "required": true
                },
                "verify_certificate": {
                    "description": "Verify certificates (if using HTTPS)",
                    "data_type": "boolean",
                    "order": 2,
                    "required": true
                },
                "headers": {
                    "description": "Additional headers (JSON object with headers)",
                    "data_type": "string",
                    "order": 3
                }
            },
            "render": {
                "type": "json",
                "width": 10,
                "height": 5,
                "title": "POST DATA"
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.parameter.body",
                    "data_type": "string",
                    "example_values": [
                        "{\"name\": \"Bad IP\"}"
                    ]
                },
                {
                    "data_path": "action_result.parameter.headers",
                    "data_type": "string",
                    "example_values": [
                        "{\"Content-Type\": \"application/json\"}"
                    ]
                },
                {
                    "data_path": "action_result.parameter.location",
                    "data_type": "string",
                    "contains": [
                        "endpoint"
                    ],
                    "example_values": [
                        "/rest/assets"
                    ]
                },
                {
                    "data_path": "action_result.parameter.verify_certificate",
                    "data_type": "boolean",
                    "example_values": [
                        false
                    ]
                },
                {
                    "data_path": "action_result.data.*.location",
                    "data_type": "string",
                    "contains": [
                        "url"
                    ],
                    "example_values": [
                        "http://192.168.1.26/rest/assets"
                    ]
                },
                {
                    "data_path": "action_result.data.*.method",
                    "data_type": "string",
                    "example_values": [
                        "POST"
                    ]
                },
                {
                    "data_path": "action_result.data.*.parsed_response_body",
                    "data_type": "string",
                    "example_values": [
                        "{\"failed\": true, \"message\": \"Requested item not found\"}"
                    ]
                },
                {
                    "data_path": "action_result.data.*.response_body",
                    "data_type": "string",
                    "example_values": [
                        "{\"failed\": true, \"message\": \"Requested item not found\"}"
                    ]
                },
                {
                    "data_path": "action_result.data.*.response_headers",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary.reason",
                    "data_type": "string",
                    "example_values": [
                        "Not Found"
                    ]
                },
                {
                    "data_path": "action_result.summary.status_code",
                    "data_type": "numeric",
                    "example_values": [
                        404
                    ]
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string",
                    "example_values": [
                        "Can't process response from server. Status Code: 404 Data from server: {\"failed\": true, \"message\": \"Requested item not found\"}"
                    ]
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric",
                    "example_values": [
                        0
                    ]
                }
            ],
            "versions": "EQ(*)"
        }
    ]
}